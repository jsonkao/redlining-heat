{"id":"../node_modules/text-balancer/text-balancer.js","dependencies":[{"name":"/Users/jasonkao/Development/redlining-heat/package.json","includedInParent":true,"mtime":1616257873954},{"name":"/Users/jasonkao/Development/redlining-heat/node_modules/text-balancer/package.json","includedInParent":true,"mtime":1493235254000}],"generated":{"js":"var candidates = [];\n\n// pass in a string of selectors to be balanced.\n// if you didnt specify any, thats ok! We'll just\n// balance anything with the balance-text class\nvar textBalancer = function (selectors) {\n\n    if (!selectors) {\n        candidates = document.querySelectorAll('.balance-text');\n    } else {\n        createSelectors(selectors);\n    }\n\n    balanceText();\n\n    var rebalanceText = debounce(function() {\n        balanceText();\n    }, 100);\n\n    window.addEventListener('resize', rebalanceText);\n}\n\n// this populates our candidates array with dom objects\n// that need to be balanced\nvar createSelectors = function(selectors) {\n    selectorArray = selectors.split(',');\n    for (var i = 0; i < selectorArray.length; i += 1) {\n        var currentSelectorElements = document.querySelectorAll(selectorArray[i].trim());\n\n        for (var j = 0; j < currentSelectorElements.length; j += 1) {\n            var currentSelectorElement = currentSelectorElements[j];\n            candidates.push(currentSelectorElement);\n        }\n    }\n}\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nvar debounce = function (func, wait, immediate) {\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};\n\n\n// HELPER FUNCTION -- initializes recursive binary search\nvar balanceText = function () {\n    var element;\n    var i;\n\n    for (i = 0; i < candidates.length; i += 1) {\n        element = candidates[i];\n\n        if (textElementIsMultipleLines(element)) {\n            element.style.maxWidth = '';\n            squeezeContainer(element, element.clientHeight, 0, element.clientWidth);\n        }\n\n    }\n\n}\n\n// Make the element as narrow as possible while maintaining its current height (number of lines). Binary search.\nvar squeezeContainer = function (element, originalHeight, bottomRange, topRange) {\n    var mid;\n    if (bottomRange >= topRange) {\n        element.style.maxWidth = topRange + 'px';\n        return;\n    }\n    mid = (bottomRange + topRange) / 2;\n    element.style.maxWidth = mid + 'px';\n\n    if (element.clientHeight > originalHeight) {\n        // we've squoze too far and element has spilled onto an additional line; recurse on wider range\n        squeezeContainer(element, originalHeight, mid+1, topRange);\n    } else {\n        // element has not wrapped to another line; keep squeezing!\n        squeezeContainer(element, originalHeight, bottomRange+1, mid);\n    }\n}\n\n// function to see if a headline is multiple lines\n// we only want to break if the headline is multiple lines\n//\n// We achieve this by turning the first word into a span\n// and then we compare the height of that span to the height\n// of the entire headline. If the headline is bigger than the\n// span by 10px we balance the headline.\nvar textElementIsMultipleLines = function (element) {\n    var firstWordHeight;\n    var elementHeight;\n    var HEIGHT_OFFSET;\n    var elementWords;\n    var firstWord;\n    var ORIGINAL_ELEMENT_TEXT;\n\n    ORIGINAL_ELEMENT_TEXT = element.innerHTML;\n\n    // usually there is around a 5px discrepency between\n    // the first word and the height of the whole headline\n    // so subtract the height of the headline by 10 px and\n    // we should be good\n    HEIGHT_OFFSET = 10;\n\n    // get all the words in the headline as\n    // an array -- will include punctuation\n    //\n    // this is used to put the headline back together\n    elementWords = element.innerHTML.split(' ');\n\n    // make span for first word and give it an id\n    // so we can access it in le dom\n    firstWord = document.createElement('span');\n    firstWord.id = 'element-first-word';\n    firstWord.innerHTML = elementWords[0];\n\n    // this is the entire headline\n    // as an array except for first word\n    //\n    // we will append it to the headline after the span\n    elementWords = elementWords.slice(1);\n\n    // empty the headline and append the span to it\n    element.innerHTML = '';\n    element.appendChild(firstWord);\n\n    // add the rest of the element back to it\n    element.innerHTML += ' ' + elementWords.join(' ');\n\n    // update the first word variable in the dom\n    firstWord = document.getElementById('element-first-word');\n\n    firstWordHeight = firstWord.offsetHeight;\n    elementHeight = element.offsetHeight;\n    // restore the original element text\n    element.innerHTML = ORIGINAL_ELEMENT_TEXT;\n\n    // compare the height of the element and the height of the first word\n    return elementHeight - HEIGHT_OFFSET > firstWordHeight;\n\n} // end headlineIsMultipleLines\n\nexports.balanceText = textBalancer;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/text-balancer/text-balancer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}}],"sources":{"../node_modules/text-balancer/text-balancer.js":"var candidates = [];\n\n// pass in a string of selectors to be balanced.\n// if you didnt specify any, thats ok! We'll just\n// balance anything with the balance-text class\nvar textBalancer = function (selectors) {\n\n    if (!selectors) {\n        candidates = document.querySelectorAll('.balance-text');\n    } else {\n        createSelectors(selectors);\n    }\n\n    balanceText();\n\n    var rebalanceText = debounce(function() {\n        balanceText();\n    }, 100);\n\n    window.addEventListener('resize', rebalanceText);\n}\n\n// this populates our candidates array with dom objects\n// that need to be balanced\nvar createSelectors = function(selectors) {\n    selectorArray = selectors.split(',');\n    for (var i = 0; i < selectorArray.length; i += 1) {\n        var currentSelectorElements = document.querySelectorAll(selectorArray[i].trim());\n\n        for (var j = 0; j < currentSelectorElements.length; j += 1) {\n            var currentSelectorElement = currentSelectorElements[j];\n            candidates.push(currentSelectorElement);\n        }\n    }\n}\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nvar debounce = function (func, wait, immediate) {\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};\n\n\n// HELPER FUNCTION -- initializes recursive binary search\nvar balanceText = function () {\n    var element;\n    var i;\n\n    for (i = 0; i < candidates.length; i += 1) {\n        element = candidates[i];\n\n        if (textElementIsMultipleLines(element)) {\n            element.style.maxWidth = '';\n            squeezeContainer(element, element.clientHeight, 0, element.clientWidth);\n        }\n\n    }\n\n}\n\n// Make the element as narrow as possible while maintaining its current height (number of lines). Binary search.\nvar squeezeContainer = function (element, originalHeight, bottomRange, topRange) {\n    var mid;\n    if (bottomRange >= topRange) {\n        element.style.maxWidth = topRange + 'px';\n        return;\n    }\n    mid = (bottomRange + topRange) / 2;\n    element.style.maxWidth = mid + 'px';\n\n    if (element.clientHeight > originalHeight) {\n        // we've squoze too far and element has spilled onto an additional line; recurse on wider range\n        squeezeContainer(element, originalHeight, mid+1, topRange);\n    } else {\n        // element has not wrapped to another line; keep squeezing!\n        squeezeContainer(element, originalHeight, bottomRange+1, mid);\n    }\n}\n\n// function to see if a headline is multiple lines\n// we only want to break if the headline is multiple lines\n//\n// We achieve this by turning the first word into a span\n// and then we compare the height of that span to the height\n// of the entire headline. If the headline is bigger than the\n// span by 10px we balance the headline.\nvar textElementIsMultipleLines = function (element) {\n    var firstWordHeight;\n    var elementHeight;\n    var HEIGHT_OFFSET;\n    var elementWords;\n    var firstWord;\n    var ORIGINAL_ELEMENT_TEXT;\n\n    ORIGINAL_ELEMENT_TEXT = element.innerHTML;\n\n    // usually there is around a 5px discrepency between\n    // the first word and the height of the whole headline\n    // so subtract the height of the headline by 10 px and\n    // we should be good\n    HEIGHT_OFFSET = 10;\n\n    // get all the words in the headline as\n    // an array -- will include punctuation\n    //\n    // this is used to put the headline back together\n    elementWords = element.innerHTML.split(' ');\n\n    // make span for first word and give it an id\n    // so we can access it in le dom\n    firstWord = document.createElement('span');\n    firstWord.id = 'element-first-word';\n    firstWord.innerHTML = elementWords[0];\n\n    // this is the entire headline\n    // as an array except for first word\n    //\n    // we will append it to the headline after the span\n    elementWords = elementWords.slice(1);\n\n    // empty the headline and append the span to it\n    element.innerHTML = '';\n    element.appendChild(firstWord);\n\n    // add the rest of the element back to it\n    element.innerHTML += ' ' + elementWords.join(' ');\n\n    // update the first word variable in the dom\n    firstWord = document.getElementById('element-first-word');\n\n    firstWordHeight = firstWord.offsetHeight;\n    elementHeight = element.offsetHeight;\n    // restore the original element text\n    element.innerHTML = ORIGINAL_ELEMENT_TEXT;\n\n    // compare the height of the element and the height of the first word\n    return elementHeight - HEIGHT_OFFSET > firstWordHeight;\n\n} // end headlineIsMultipleLines\n\nexports.balanceText = textBalancer;"},"lineCount":154}},"error":null,"hash":"387ef42d6bdc36445e160996ab5360d4","cacheData":{"env":{}}}